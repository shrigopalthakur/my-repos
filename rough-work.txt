


*************************************************
/var/www/campaign.medflick.com   <-------  ye landing page hai medflick  ka jab bhi koi new landing page create karna ho to yha pr karna

  
but ab kuch bhi change mat karna
aur haa passwrd tum change karlena 
sudo passwd ubuntu   <---- password change command
make it new password and update to the manohar sir


*******************************************************
NGINX KI DEFAULT FILE KA PATH KUCHH BHI CHANGES KE LIYE :-
 1363  df -h
 1364  du -sh
 1365  netstat -tulnp
 1366  sudo ps aux | grep "npm start"
 1367  nproc    <---- check no. of cpu
 1368  cd
 1369  sudo vim /etc/nginx/nginx.conf
 1370  sudo vim /etc/nginx/sites-available/default
 1371  sudo nginx -t
 1372  sudo systemclt restart nginx
 1373  sudo systemctl restart nginx

****************************************************
BACKEND SERVER M JANE KA PATH :-

cd /var/www/medflickfd

***************************************************
LANDING PAGE PR JANE KE LIYE PATH :-

cd /var/www/html/medflick.com/Medflick-new-Home/public/


*******************************************
MedAdmin8050   <------ Password of Ubuntu User server ip :- 13.201.11.181    <--- Public ip
                                                            172.31.47.153    <--- Private ip
copy karke paste karna h 
select normal


Host:-  13.201.11.181
username: ubuntu
passwword: MedAdmin8050

Aws account details :-
Email id :- internal@medflick.com
password :- ()7b56^&$DmkDWO78^&

***************************************************
 CODE KO LIVE KARNE KE LIYE :- jis folder ke andar code h jaise ki Medflick-new-Home/ <---ke andar    
      
 2001  su ubuntu
 2002  cd /home/ubuntu
 2003  sudo git clone -b main https://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@github.com/wikreate-Manish/Medflick-new-Home.git
 2004  ls
 2005  cd Medflick-new-Home/
 2006  ls
 2007  sudo cp -r src /var/www/html/medflick.com/Medflick-new-Home/
 2008  cd 
 2009  ls
 2010  sudo rm -rf Medflick-new-Home/    <---------------------------------- ye file delete jb karni h jb server pr memory space kam ho agar memory m space available h to isko delete karne ki jaroorat nhi h &&&&&&&  agar koi errror aata h isko delete na karne se to isko delete kar denge pr poore dhyan se delete karna h ki kaise or kis jagah pr ye located h.
 2011  cd /var/www/html/medflick.com/Medflick-new-Home/
 2012  sudo npm install
 2013  sudo npm run build
 2014  pm2 restart medflick
 2015  pm2 start npm --name "medflick" -- start    <------ iss command ko har bar nhi chalana h isse new pm2 service create ho jati h or ye cpu ka usage badha deti h.
 2016  pm2 log
 2017  pm2 status

&&&&&&&
second ye bhi sahi tarika h ye maine khud se chalayi thi commands :-  
YE SRC WALE FOLDER KE ANDAR KA CODE LIVE KARNE KA TARIKA H :-

 2000  su ubuntu
 2001  cd /home/ubuntu
 2002  sudo git clone -b main https://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@github.com/wikreate-Manish/Medflick-new-Home.git
 2003  cd Medflick-new-Home/
       ls
 2004  sudo cp -r src /var/www/html/medflick.com/Medflick-new-Home/
 2005  cd
 2006  ls
 2007  sudo rm -rf Medflick-new-Home/
 2008  cd /var/www/html/medflick.com/Medflick-new-Home/
 2009  sudo npm install
 2010  sudo npm run build
 2011  pm2 restart medflick
 2012  pm2 start npm --name "medflick" -- start    <------ iss command ko har bar nhi chalana h isse new pm2 service create ho jati h or ye cpu ka usage badha deti h.
 2013  pm2 log
 2014  pm2 status

YE next.config.js WALE FOLDER KE ANDAR KA CODE LIVE KARNE KA TARIKA H :-
 1998  su ubuntu
 1999  cd /home/ubuntu
 2002  sudo git clone -b main https://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@github.com/wikreate-Manish/Medflick-new-Home.git
 2003  ls
 2004  cd Medflick-new-Home/
 2005  sudo cp -r next.config.js /var/www/html/medflick.com/Medflick-new-Home/
 2006  cd /var/www/html/medflick.com/Medflick-new-Home/
 2007  sudo npm install
 2008  sudo npm run build
 2009  pm2 restart medflick
 2010  pm2 start npm --name "medflick" -- start     <------ iss command ko har bar nhi chalana h isse new pm2 service create ho jati h or ye cpu ka usage badha deti h.
 2011  pm2 log
 2012  history
  
***************************************************
LANDING PAGE KO SUB-DOMAIN SE SUB-DIRECTORY PR REDIRECT KARNE KE LIYE :-
 JAISE campaign.medflick.com se medflick.campaign.com pr traffick ko redirect karna ye APOLLO wale page ke liye h :-
 
   1371   cd /etc/nginx/sites-available/
   1372   vim campaign.medflick.com   <------ isme jake landing page ko sub-domain se sub-directory pr redirect karne ke liye usi page ke configuration step wali line m jake sub-domain ki jagah sub-directory ko paste kar denge aise :- 

location /apollo {
   redirect 301 https://medflick.com/campaign/apollo

}

 1373  sudo nginx -t
 1374  sudo systemctl restart nginx
 1376  history 


*******************************************************
SSH DEFAULT FILE LOCATION :-
sudo -i
cd .ssh
ll
vim authorized_keys
                   ( isme id_rsa  or id_rsa.pub ) <------ ye dono file ke output ko copy karke isme paste karte h
cat authorized_keys 

*********************************************************
PM2 SETUP KARNE KE LIYE :- 

Pm2 kis liye use hota h :-
it makes sure your app stays open and running in the background, even if you close your terminal or computer. If your app crashes, PM2 restarts it automatically.

Handles Multiple Apps :-
if you have more than one app or service, PM2 can keep track of all of them and make sure theyâ€™re running properly

npm install pm2 -g                <----- PM2 Install Karna
pm2 start app.js                  <----- Apne Node.js Application Ko Start Karna
pm2 status                        <----- Application Ko Monitor Karna
pm2 restart app.js                <----- Application Ko Restart Karna
pm2 stop app.js                   <----- Application Ko Stop Karna
pm2 reload all                    <----- PM2 Ko Restart Karna
pm2 logs                          <----- PM2 Ki Logs Dekhna
pm2 startup                       <----- PM2 Ka Autostart Setup Karna
pm2 save                          <----- PM2 Ko Save Karna


***********************************************************

WEBSITE KI SPEED OR PERFORMANCE KAISE CHECK KARE :-

1st Tool  :- Pagespeed insights
2nd Tool  :- GTmetrix
3rd Tool  :- Pingdom

1st Tool :-

Pagespeed insights         <--------- Go to chrome and search this tool for check website speed or perfformance
https://www.cocoon.co.in   <--------- Paste the website url <------ in Pagespeed insights
Analyze                    <--------- Click on This

2nd Tool :-

GTmetrix                   <--------- Go to chrome and search this tool for check website speed or perfformance
https://www.cocoon.co.in   <--------- Paste the website url <------ in Pagespeed insights
Analyze                    <--------- Click on This

3rd Tool :-

Pingdom                    <--------- Go to chrome and search this tool for check website speed or perfformance
https://www.cocoon.co.in   <--------- Paste the website url <------ in Pagespeed insights
Analyze                    <--------- Click on This

Auto optimize <--- ye wordpress website plugin h
isme sari details de dega ki kya kya issue h jiski wajah se website slow h jaise ki images ka size jyada hona or bhi bahut sari problem

****************************************************************

SSH KI MAIN FILE M ROOT KO LOGIN KARNE KE LIYE ALLOW KARNA :-

vim /etc/ssh/sshd_config
permitRootLogin yes   <---- yes karna h isko or iss line m aage # nhi laga hona chahiye
sudo systemctl restart sshd

********************************************
FILE KO COPY KARNE KE METHODS :-
cp -r apollo /home/ubuntu/backup                             <--- ek server pe hi ek location se dusre location pr copy karna data ko
scp -r apollo root@192.12.321.123:/home/ubuntu/backup        <------ ek SERVER se dusre SERVER pr data ko copy karna
rsync -avz apollo root@192.12.321.123:/home/ubuntu/backup    <---- ek SERVER se dusre SERVER pr data ko copy karna
 
(sftp root@192.12.321.123
put apollo /home/ubuntu/backup                               <------  ftp se connect karke )
  
git clone -b main https://gtihub.com/your-repo.git /home/ubuntu/backup    <------ github se copy karna direct destination pr

( cd /var/www/medflick
git pull origin main   )  <---- github account pr code ko rakhna us wali directory m jakar jisme code h 

************************************************

MYSQL SE DATABASE KA BACKUP LENA (Backup file create karna) :-
su ubuntu
cd /home/ubuntu  <--- yaha pe database ki backup files rakhi h
ls

sudo mysqldump -u root -p crmurts5Sqk > crm_backup.sql     <--- crmurts5Sqk ki backup file  <--- ye command backup lene ke liye h isme pahle database ka naam jiska bakup lena h

sudo mysqldump -u root -p medflick > medflick__backup.sql  <--- medflick ki backup file         ^--- phir wo name dena h jis name se backup file create karni h

sudo mysql -u root -p
password :- toor
show databases;   <--- check databases
create database database_name;   <---- create a new database
use database_name;               <---- kisi bhi particular database m jana
drop database database_name;     <---- delete a particular database

show tables;                     <---- show tables in the database



****************************



 cd /home/ubuntu
 2007  ls
 2008  sudo apt update && apt upgrade -y
 2009  sudo apt update
 2010  sudo apt install phpmyadmin
 2011  which phpmyadmin
 2012  which /home/ubuntu/phpmyadmin
 2013  sudo apt-get install -y phpmyadmin
 2014  sudo service apache2 restart
 2015  sudo systemctl start apache2
 2016  sudo apt install nginx -y
 2017  sudo apt install mysql-server -y
 2018  sudo apt install php-fpm php-mysql php-zip php-xml php-mbstring php-curl php-json -y
 2019  sudo apt install phpmyadmin -y
 2020  sudo systemctl reload nginx
 2021  sudo systemctl status mysql.service
 2022  sudo systemctl status apache2
 2023  sudo systemctl status apache2.service
 2024  sudo apt update
 2025  sudo apt install mysql-server
 2026  sudo apt-get install apache2
 2027  sudo systemctl status mysql
 2028  sudo systemctl status apache2
 2029  sudo systemctl start apache2
 2030  sudo systemctl start apache-htcacheclean.service
 2031  sudo systemctl status apache2
 2032  sudo apt install php
 2033  sudo apt install phpmyadmin
 2034  sudo phpenmod mbstring
 2035  sudo systemctl restart apache2
 2036  sudo apt install apache2 -y
 2037  sudo systemctl start apache2
 2038  sudo systemctl enable apache2
 2039  sudo systemctl status apache2
 2040  sudo systemctl start apache2.service
 2041  history


**************
PHPMYADMIN INSTALLATION COMMANDS :- THIS IS WRITE PROCESS

2003  sudo apt update
 2004  sudo apt install apache2 -y
 2005  sudo systemctl start apache2
 2006  sudo systemctl enable apache2
 2007  sudo systemctl status apache2.service
 2008  sudo lsof -i :80
 2009  kill -9 221512
 2010  pkill -9 221512
 2011* pkill -9
 2012  sudo lsof -i :80
 2013  systemctl status apache2.service
 2014  sudo nano /etc/apache2/ports.conf
 2015  sudo systemctl start apache2
 2016  systemctl status apache2.service
 2017  sudo apt install php libapache2-mod-php php-mysql -y
 2018  sudo systemctl restart apache2
 2019  sudo nano /var/www/html/info.php
 2020  sudo systemctl start apache2
 2021  ip config
 2022  ipconfig
 2023  ip addr
 2024  clear
 2025  sudo systemctl status apache2
 2026  c
 2027  clear
 2028  top
 2029  curl http://localhost:82/info.php
 2030  sudo ufw allow 82/tcp
 2031  sudo ufw status
 2032  sudo apt update
 2033  sudo apt install ufw
 2034  clear
 2035  sudo ufw status
 2036  sudo systemctl restart apache2
 2037  sudo apt update
 2038  sudo apt install phpmyadmin
 2039  sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin
 2040  vim /etc/apache2/ports.conf
 2041  sudo systemctl restart apache2
 2042  sudo mysql -u root
 2043  history

ALTER USER 'root'@'localhost' IDENTIFIED BY 'your_new_password';  <---- change password of root user of mysql
**********************************************
vim default :-

location /campaign/apollo {
        root /var/www/campaign.medflick.com;
        index index.php index.html;
        try_files $uri $uri/ /index.php?$query_string;

        location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        }


        location ~* \.(js|webp|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        access_log off;
        add_header Cache-Control "public";
        }

        location ~* \.(woff|woff2|ttf|otf)$ {
        expires 30d;  # Set cache TTL to 7 days
        add_header Cache-Control "public";
        }
}


apollo wali file remove kar do campaign.medflick.com wali folder se aur haa ab nginx file mai kuch mat karna hai 

jab bole to sab folder ko move karwa dena space nahi hai serveer itna theek hai


cat index.html
 1069  nginx -t
 1070  cd
 1071  cd /etc/nginx/nginx.conf
 1072  cd /etc/nginx/
 1073  ll
 1074  cat nginx.conf 
 1075  ll
 1076  cd conf.d/
 1077  ll
 1078  cd ..
 1079  ll
 1080  cd sites-available/
 1081  ll
 1082  cat campaign.medflick.com 
 1083  ll
 1084  cd
 1085  cd /var/www
 1086  ll
 1087  cd campaign.medflick.com/
 1088  ll
 1089  cat index.html 
 1090  ll
 1091  cd apollo/
 1092  ll
 1093  vim index.html
 1094  cd
 1095  cd /var/www/html
 1096  ll
 1097  vim index.html 
 1098  systemctl restart nginx
 1099  vim index.html 
 1100  systemctl restart nginx
 1101  cd 
 1102  cd /var/www
 1103  ll
 1104  cd campaign.medflick.com/
 1105  ll
 1106  cd
 1107  cd /etc/nginx/sites-available/
 1108  ll
 1109* 
 1110  ll
 1111  vim campaign.medflick.com 
 1112  cp -r campaign.medflick.com /home/ubuntu/backup
 1113  vim campaign.medflick.com 
 1114  sudo vim campaign.medflick.com
location /apollo {
          return 301 https://medflick.com/campaign/apollo;


} 
 
 1120  sudo vim campaign.medflick.com 
 1121  sudo nginx -t
 1122  sudo systemctl restart nginx
 1123  cd /var/www/html
 1124  ll
 1125  cd medflick.com/
 1126  ll
 1127  cd Medflick-new-Home/
 1128  ll
 1129  cd public/
 1130  ll
 1131  sudo mkdir campaign
 1132  cd ..
 1133  ll
 1134  cd ..
 1135  ll
 1136  cd ..
 1137  ll
 1138  cd ..
 1139  ll
 1140  cd campaign.medflick.com/
 1141  ll
 1142  sudo cp -r apollo/ /var/www/html/medflick.com/Medflick-new-Home/public/campaign/
 1143  cd
 1144  cd /var/www/html/medflick.com/Medflick-new-Home/public/campaign/
 1145  ll
 1146  cd apollo/
 1147  ll
 1148  cd
 1149  cd /home/ubuntu/backup/
 1150  ll
 1151  cat campaign.medflick.com 
 1152  cd 
 1153  cd /etc/nginx/sites-available/
 1154  ll
 
1155  vim default
location /Medflick-new-Home/_next/static {
        root /var/www/html/medflick.com/Medflick-new-Home/.next/static;
        #expires 30d;
        #add_header Cache-Control "public, max-age=2592000";
    }
        location /campaign {
        root /var/www/html/medflick.com/Medflick-new-Home/public;
        index index.php index.html;
        try_files $uri $uri/ /index.php?$query_string;

        location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        }


        location ~* \.(js|webp|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        access_log off;
        add_header Cache-Control "public";
        }

        location ~* \.(woff|woff2|ttf|otf)$ {
        expires 30d;  # Set cache TTL to 7 days
        add_header Cache-Control "public";

        }
        }
}
 
 
 1163  vim default
 1164  sudo  nginx -t
 1165  sudo systemctl restart nginx
 1166  history

********************
location /apollo {
        root /var/www/campaign.medflick.com;
        index index.php index.html;
        try_files $uri $uri/ /index.php?$query_string;

        location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        }


        location ~* \.(js|webp|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        access_log off;
        add_header Cache-Control "public";
        }

        location ~* \.(woff|woff2|ttf|otf)$ {
        expires 30d;  # Set cache TTL to 7 days
        add_header Cache-Control "public";
        }
}





cat index.html
 1069  nginx -t
 1070  cd
 1071  cd /etc/nginx/nginx.conf
 1072  cd /etc/nginx/
 1073  ll
 1074  cat nginx.conf 
 1075  ll
 1076  cd conf.d/
 1077  ll
 1078  cd ..
 1079  ll
 1080  cd sites-available/
 1081  ll
 1082  cat campaign.medflick.com 
 1083  ll
 1084  cd
 1085  cd /var/www
 1086  ll
 1087  cd campaign.medflick.com/
 1088  ll
 1089  cat index.html 
 1090  ll
 1091  cd apollo/
 1092  ll
 1093  vim index.html
 1094  cd
 1095  cd /var/www/html
 1096  ll
 1097  vim index.html 
 1098  systemctl restart nginx
 1099  vim index.html 
 1100  systemctl restart nginx
 1101  cd 
 1102  cd /var/www
 1103  ll
 1104  cd campaign.medflick.com/
 1105  ll
 1106  cd
 1107  cd /etc/nginx/sites-available/
 1108  ll
 1109* 
 1110  ll
 1111  vim campaign.medflick.com 
 1112  cp -r campaign.medflick.com /home/ubuntu/backup


 1120  sudo vim campaign.medflick.com 
 1121  sudo nginx -t
 1122  sudo systemctl restart nginx
 1123  cd /var/www/html
 1124  ll
 1125  cd medflick.com/
 1126  ll
 1127  cd Medflick-new-Home/
 1128  ll
 1129  cd public/
 1130  ll
 1131  sudo mkdir campaign
 1132  cd ..
 1133  ll
 1134  cd ..
 1135  ll
 1136  cd ..
 1137  ll
 1138  cd ..
 1139  ll
 1140  cd campaign.medflick.com/
 1141  ll
 1142  sudo cp -r apollo/ /var/www/html/medflick.com/Medflick-new-Home/public/campaign/
 1143  cd
 1144  cd /var/www/html/medflick.com/Medflick-new-Home/public/campaign/
 1145  ll
 1146  cd apollo/
 1147  ll
 1148  cd
 1149  cd /home/ubuntu/backup/
 1150  ll
 1151  cat campaign.medflick.com 
 1152  cd 
 1153  cd /etc/nginx/sites-available/
 1154  ll
 
 1163  vim default
 1164  sudo nginx -t
 1165  sudo systemctl restart nginx
 1166  historys

******************************************************
Step 1: DNS CHECKER Tool ka Use Karne DNS ke A , CNAME Record check karna :-

DNS Checker (free tool) ka use karke aap campaign.medflick.com ka DNS record dekh sakte hain.
Record Type: Aapko A Record, CNAME, MX, ya TXT record check karne ki zaroorat ho sakti hai, depending on ki subdomain kis type ka record point kar raha hai.

DNS Checker <--- search karein google m or iski website pe click karke open kar le: https://dnschecker.org/
Hostname (search bar) mein ye dalain ----->  campaign.medflick.com daalein.
Record Type m ye ----> ( A ya CNAME ) select karein (depending on subdomain configuration).
Click on ----> search button.

Step 3: Results

Agar A Record hai, to      ----> aapko IP address milega, jahan campaign.medflick.com point kar raha hai.
Agar CNAME Record hai, to  ----> aapko target domain ka naam milega, jaise sis.tdn.gtranslate.net.
Agar MX Record hai, to     ----> aapko mail server ka information milega.

*************************************************
Step-by-Step Guide to Create CNAME Record in AWS Route 53:
Step 1: AWS Console mein Login Karein
AWS Console me login karein: AWS Management Console

AWS Console me Route 53 ko search karein aur open karein.

Step 2: Hosted Zone Select Karein
Route 53 dashboard me, "Hosted Zones" section me jayein.

Aapko apne domain medflick.com ka hosted zone yahan dikhai dega. Agar medflick.com ka hosted zone already Route 53 mein configured hai, to uspe click karein.

Important: Agar aapka domain GoDaddy ya kisi aur registrar par registered hai, to aapko pehle name servers update karne honge (ye step neeche bataya gaya hai).

Step 3: CNAME Record Create Karein
Hosted Zone me "Create record" par click karein.

Record details fill karein:

Record name: hmn (Yeh subdomain ka naam hai, isse hmn.medflick.com banega).
Record type: CNAME ko select karein.
Value: sis.tdn.gtranslate.net (Yeh target domain hai jahan aapka CNAME point karega).
TTL: Default TTL (300 seconds) chhodein.
Routing policy: Simple routing ko select karein.
Evaluate target health: No set karein.
"Create records" button par click karein.

Step 5: Update Name Servers on GoDaddy (Only if Domain is Registered with GoDaddy)
Agar aapka domain GoDaddy par registered hai, to aapko apne domain ke name servers ko AWS Route 53 ke name servers se update karna hoga.

GoDaddy account me login karein.
My Products section me apne domain ko select karein.
DNS Settings ya Manage DNS par click karein.
Nameservers section me, Custom Nameservers select karein aur Route 53 ke name servers daalein. AWS Console me Hosted Zone page pe aapko ye name servers milenge (jaise ns-1234.awsdns-56.org).
Changes save karne ke baad, DNS propagation mein time lag sakta hai (typically 1-24 hours).
Step 6: Verify CNAME Record
Jab DNS propagation complete ho jayegi, aap apne subdomain hmn.medflick.com ko sis.tdn.gtranslate.net ke saath point karte dekh sakenge.
Summary of Steps:
AWS Route 53 me Hosted Zone select karen.
CNAME record ko create karen: hmn.medflick.com â†’ sis.tdn.gtranslate.net.
Agar aapka domain GoDaddy par registered hai, to name servers update karen.
DNS Checker se record ki propagation verify karen.
Wait for DNS Propagation (1-24 hours).

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

Command line method se cname add karna :-

Haan, aap AWS CLI ka use karke Route 53 me CNAME record add kar sakte hain, jo aapke Amazon Web Services (AWS) account ka part hai.

Agar aap AWS CLI ke through CNAME record add karna chahte hain, to aapko Route 53 ka use karna hoga, jo AWS ka managed DNS service hai.

Prerequisites:
AWS CLI ko apne machine par install karna hoga.

AWS account me Route 53 setup hona chahiye, aur aapke paas domain (yaha pe medflick.com) registered hona chahiye.

AWS CLI me apna account configure hona chahiye. Agar aapne pehle se AWS CLI configure nahi kiya hai, to command chalayein:

bash
Copy
aws configure
Yahan aapko AWS Access Key, Secret Key, Region, aur Output format enter karna hoga.

Step 1: CNAME Record Ka JSON File Prepare Karein
AWS CLI ke through CNAME record add karne ke liye aapko ek JSON file create karni hogi jo DNS record details ko define kare.

Example JSON File (cname-record.json):
json
Copy
{
  "Comment": "Add CNAME record for hmn.medflick.com",
  "Changes": [
    {
      "Action": "UPSERT",
      "ResourceRecordSet": {
        "Name": "hmn.medflick.com.",
        "Type": "CNAME",
        "TTL": 60,
        "ResourceRecords": [
          {
            "Value": "sis.tdn.gtranslate.net"
          }
        ]
      }
    }
  ]
}
Explanation:

"Name": "hmn.medflick.com." â€” Yahaan pe aapke subdomain ka naam specify kiya gaya hai.
"Value": "sis.tdn.gtranslate.net" â€” Yeh woh target value hai jahan aapka CNAME record point karega.
"TTL": 60 â€” Yeh Time To Live hai, jo record ke cache time ko define karta hai (in seconds).
"Action": "UPSERT" â€” Agar record already exist karta hai to use update karega, agar nahi to naya record create karega.
Step 2: CNAME Record AWS CLI Se Add Karein
Aapko Route 53 me apne hosted zone ID ki zarurat padegi. Hosted zone ID ko aap AWS Console ya CLI se fetch kar sakte hain.

Fetch Hosted Zone ID:
Agar aapke paas hosted zone ID nahi hai, to aap following command se apne hosted zones ko list kar sakte hain:

bash
Copy
aws route53 list-hosted-zones
Is command se aapko aapke domain ke liye hosted zone ID mil jayegi.

Add CNAME Record:
Ab, aap change-resource-record-sets command ko use karke CNAME record add kar sakte hain:

bash
Copy
aws route53 change-resource-record-sets \
    --hosted-zone-id Z3M3KABCDEF --change-batch file://cname-record.json
Yahan:

Z3M3KABCDEF â€” Aapka actual hosted zone ID hoga.
file://cname-record.json â€” Aapne jo JSON file prepare ki thi, uska path hai.

*****************************************
1. Godaddy KE ACCOUNT M LOGIN KARNE OR USKE SERVER KO ACCESS KARNE KA SETUP :-

GoDaddy ki website par jaake apne account mein login karein: GoDaddy Login
Apna username aur password daal kar login karein.

2. cPANEL YA PLESK PANEL KA ACCESS :-
Agar aap shared hosting use kar rahe hain, toh GoDaddy aapko cPanel ya Plesk panel provide karta hai.

*** cPANEL ACCESS KARNE KE LIYE :-

Apne GoDaddy dashboard par, "MY PRODUCT" section me jaayein.
Aapke hosting plan ke neeche cPANEL ka option milega.
"MANAGE" par click karen, aur phir aapko cPanel ka interface milega.

*** PLESK PANEL ACCESS KARNE KE LIYE :-

Agar aap Plesk panel use karte hain, toh "MANAGE" ke button par click karne ke baad Plesk dashboard open ho jaayega.

3. FTP (File Transfer Protocol) KE JARIYE FILE TRANSFER KARNA :-
Agar aap apne website ke files ko directly edit karna chahte hain, toh aap FTP (File Transfer Protocol) ka use kar sakte hain.

*** FTP SETUP KE LIYE :-

GODADDY ke cPANEL ya PLESK panel mein FTP accounts ka option hota hai.
Yahan se aap FTP username aur password generate kar sakte hain.
Ek FTP client jaise FILEZILLA ko install karke, aap FTP credentials daal kar server ke files access kar sakte hain.

4. SSH (Secure Shell) KE JARIYE ACCESS KARNA :-
Agar aapko server pe COMMAND LINE ka access chahiye ho, toh aap SSH ka use kar sakte hain, lekin iske liye aapke paas SSH access enable hona chahiye (yeh feature kuch hosting plans me hota hai).

*** SSH SETUP KE LIYE :-

GoDaddy ka dashboard mein "SSH ACCESS" ka option hota hai jahan se aap SSH key generate kar sakte hain.
Apni SSH client software (jaise PuTTY ya Terminal) se SSH login kar sakte hain.
5. Website ka Database Access Karna
Agar aapko apne website ke database (jaise MySQL) ko manage karna hai, toh cPanel ke "phpMyAdmin" tool ka use karke aap database ko access kar sakte hain.

******************************
Step 2: FTP ACCOUNT SETUP KARNA FILEZILLA SE FILE OR FOLDER KO LOCAL SYSTEM SE SERVER PR PAHUCHANA YA RAKHA va REMOTE SERVER va SERVER SE LOCAL SYSTEM PE LENA ya RAKHNA :-
cPanel mein login karne ke baad:
cPanel dashboard par jayein.
Files section ke andar FTP ACCOUNT ka option milega. Is option ko click karein.
Yahan se aap FTP ACCOUNT create kar sakte hain. Aapko yeh details deni hogi:
Username: Apna username choose karein.
Password: Apna password set karein (strong password rakhna zaroori hai).
Directory: Aapko kis directory ko FTP se access karna hai, uska path de sakte hain (generally, aapko default directory use karna hoga, jo aapke domain ke files ko point karti hai).
Quota: Agar chahen toh aap FTP account ke liye storage limit set kar sakte hain.

Step 3: FTP CLIENT (FileZilla) SETUP KARNA :-
FILEZILLA open karein aur Host, Username, Password, aur Port enter karen:

Host: Yeh aapka domain name hoga ya aap apne server ka IP address bhi use kar sakte hain. Example: ftp.yourdomain.com ya 123.45.67.89.
Username: Wo username jo aapne cPanel ke FTP Accounts section mein create kiya tha.
Password: Wo password jo aapne cPanel mein set kiya tha.
Port: FTP ke liye default port 21 hota hai OR SFTP ke liye default port 22 hota h.

ISME hmm remote server ki .ppk file ko edit m jake save karke login kar sakte h.

( edit-> sftp--> add key--> select the .ppk file--> open--> ok--> nwe site--> protocol-m-sftp--> host-m-ip address--> port-m-22--> logon type-m-normal--> user-m-ubuntu--> password-m-MedAdmin8050--> ok  ) ---> ye .ppk file se connect karne ke liye configuration h 